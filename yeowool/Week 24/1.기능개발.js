// [PGS] 기능개발 / leve2
// 난이도 :  level 2
// 풀이시간 :
// 점수 : +2

/*
문제
프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.

또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.

먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.

제한 사항
작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.
작업 진도는 100 미만의 자연수입니다.
작업 속도는 100 이하의 자연수입니다.
배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.
입출력 예
progresses	speeds	return
[93, 30, 55]	[1, 30, 5]	[2, 1]
[95, 90, 99, 99, 80, 99]	[1, 1, 1, 1, 1, 1]	[1, 3, 2]
입출력 예 설명
입출력 예 #1
첫 번째 기능은 93% 완료되어 있고 하루에 1%씩 작업이 가능하므로 7일간 작업 후 배포가 가능합니다.
두 번째 기능은 30%가 완료되어 있고 하루에 30%씩 작업이 가능하므로 3일간 작업 후 배포가 가능합니다. 하지만 이전 첫 번째 기능이 아직 완성된 상태가 아니기 때문에 첫 번째 기능이 배포되는 7일째 배포됩니다.
세 번째 기능은 55%가 완료되어 있고 하루에 5%씩 작업이 가능하므로 9일간 작업 후 배포가 가능합니다.

따라서 7일째에 2개의 기능, 9일째에 1개의 기능이 배포됩니다.

입출력 예 #2
모든 기능이 하루에 1%씩 작업이 가능하므로, 작업이 끝나기까지 남은 일수는 각각 5일, 10일, 1일, 1일, 20일, 1일입니다. 어떤 기능이 먼저 완성되었더라도 앞에 있는 모든 기능이 완성되지 않으면 배포가 불가능합니다.

따라서 5일째에 1개의 기능, 10일째에 3개의 기능, 20일째에 2개의 기능이 배포됩니다.
*/
/*
< 의사코드 >
 작업진도, 하루 진행되는 작업 속도가 주어지고 100일 때만 배포 가능
 배포 먼저 되는 순서대로 배포 기능 개수를 배열로 return 
progresses 배열의 순서대로 배포하되 100가 된 것만 배포 가
만약 앞에 있는 기능보다 뒤에 있는기능이 먼저 완성 되더라도 앞의 기능이 완료 될 때 같이 배포 되어야 함


*/

function solution(progresses, speeds) {
  let answer = [];

  // days: 배포일
  let days = 1;

  // count: 오늘 배포되는 기능의 수
  let count = 0;

  // progress: 현재 기능의 작업 진도
  let progress = 0;

  // 모든 작업이 다 배포될 때까지 반복
  while (progresses[0]) {
    // 첫 번째 기능의 작업 진도
    progress = progresses[0] + speeds[0] * days;

    // 첫 번째 기능의 작업 진도가 100 이상인 경우 배포 완료
    if (progress >= 100) {
      // 배포 완료된 기능 개수 추가
      count++;

      // 배포 완료된 작업 제거
      progresses.shift();

      // 배포 완료된 작업의 속도 제거
      speeds.shift();
    }
    // 첫 번째 기능의 작업 진도가 100 미만일 경우 배포 불가능
    else {
      // 배포 완료된 기능이 있는 경우, answer에 push
      if (count > 0) {
        answer.push(count);
      }
      // 배포일 증가 (다음날)
      days++;
      // 배포 완료된 기능 개수 초기화
      count = 0;
    }
  }
  // 모든 작업이 다 배포되고 나면, 마지막으로 카운트된 배포 완료 기능 개수 push
  answer.push(count);

  return answer;
}
/*
 
테스트 1 〉	통과 (0.07ms, 33.5MB)
테스트 2 〉	통과 (0.25ms, 33.4MB)
테스트 3 〉	통과 (0.14ms, 33.6MB)
테스트 4 〉	통과 (0.21ms, 33.4MB)
테스트 5 〉	통과 (0.19ms, 33.4MB)
테스트 6 〉	통과 (0.13ms, 33.4MB)
테스트 7 〉	통과 (0.16ms, 33.5MB)
테스트 8 〉	통과 (0.21ms, 33.5MB)
테스트 9 〉	통과 (0.27ms, 33.4MB)
테스트 10 〉	통과 (0.14ms, 33.4MB)
테스트 11 〉	통과 (0.08ms, 33.4MB)
*/
