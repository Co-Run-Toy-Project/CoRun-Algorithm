// [PGS] 예상 대진표 / leve2
// 난이도 :  level 2
// 풀이시간 :
// 점수 : +8

/*
문제
△△ 게임대회가 개최되었습니다. 이 대회는 N명이 참가하고, 토너먼트 형식으로 진행됩니다. 
N명의 참가자는 각각 1부터 N번을 차례대로 배정받습니다. 
그리고, 1번↔2번, 3번↔4번, ... , N-1번↔N번의 참가자끼리 게임을 진행합니다. 
각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있습니다. 이때, 
다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다. 
만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고, 
3번↔4번에서 겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 됩니다. 
게임은 최종 한 명이 남을 때까지 진행됩니다.

이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌습니다. 
게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때, 
처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는 solution 
함수를 완성해 주세요. 단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정합니다.

제한사항
N : 21 이상 220 이하인 자연수 (2의 지수 승으로 주어지므로 부전승은 발생하지 않습니다.)
A, B : N 이하인 자연수 (단, A ≠ B 입니다.)

입출력 예
N	A	B	answer
8	4	7	3
입출력 예 설명
입출력 예 #1
첫 번째 라운드에서 4번 참가자는 3번 참가자와 붙게 되고, 7번 참가자는 8번 참가자와 붙게 됩니다. 
항상 이긴다고 가정했으므로 4번 참가자는 다음 라운드에서 2번이 되고, 7번 참가자는 4번이 됩니다. 
두 번째 라운드에서 2번은 1번과 붙게 되고, 4번은 3번과 붙게 됩니다. 항상 이긴다고 가정했으므로 2번은 다음 라운드에서 1번이 되고,
 4번은 2번이 됩니다. 세 번째 라운드에서 1번과 2번으로 두 참가자가 붙게 되므로 3을 return 하면 됩니다.
*/

/*
< 의사코드 >
게임대회 N명 참가, 토너먼트진행
A참가자와 B참가자는 항상이기는데 몇 번째 라운드에서 만나게 되는가?
부전승없음

8명일 경우 
A->4 B->7
1라운드
1:2 -> 1 아무나
3:4 -> 4
5:6 -> 5 아무나
7:8 -> 7
2라운드
1:4 -> 4
5:7 -> 7
3라운드
4:7 만남!

둘씩 짝이 되도록 하고
a와 b가 만나게 되었을 경우 while문을 종료

참가자 번호를 2로 나누고 반올림 한 값이 ab가 동일해 질 경우 while문을 탈출
a b가 같지 않을 때 마다 count올려주기

1. count담을 숫자 선언
2. 파라미터는 재선언 할 수 없으니 토너먼트A와 B로 다시 선언
3. A와 B가 같지 않음을 조건으로 한 while문 시작
4. 안에서 2로 나눈 후 반올림하여 값 다시 담아주고 count올리기
   

*/

function solution(n, a, b) {
  let count = 0;

  let [tournamentA, tournamentB] = [a, b];

  while (tournamentA !== tournamentB) {
    tournamentA = Math.ceil(tournamentA / 2);
    tournamentB = Math.ceil(tournamentB / 2);
    count++;
  }
  return count;
}

/*


테스트 1 〉	통과 (0.04ms, 33.6MB)
테스트 2 〉	통과 (0.04ms, 33.5MB)
테스트 3 〉	통과 (0.05ms, 33.5MB)
테스트 4 〉	통과 (0.06ms, 33.6MB)
테스트 5 〉	통과 (0.13ms, 33.6MB)
테스트 6 〉	통과 (0.07ms, 33.6MB)
테스트 7 〉	통과 (0.06ms, 33.5MB)
테스트 8 〉	통과 (0.04ms, 33.5MB)
테스트 9 〉	통과 (0.04ms, 33.5MB)
테스트 10 〉	통과 (0.04ms, 33.6MB)
테스트 11 〉	통과 (0.04ms, 33.5MB)
테스트 12 〉	통과 (0.04ms, 33.5MB)
테스트 13 〉	통과 (0.11ms, 33.5MB)
테스트 14 〉	통과 (0.04ms, 33.5MB)
테스트 15 〉	통과 (0.04ms, 33.5MB)
테스트 16 〉	통과 (0.04ms, 33.5MB)
테스트 17 〉	통과 (0.04ms, 33.5MB)
테스트 18 〉	통과 (0.04ms, 33.5MB)
테스트 19 〉	통과 (0.16ms, 33.5MB)
테스트 20 〉	통과 (0.15ms, 33.5MB)
테스트 21 〉	통과 (0.14ms, 33.5MB)
테스트 22 〉	통과 (0.18ms, 33.5MB)
테스트 23 〉	통과 (0.11ms, 33.5MB)
테스트 24 〉	통과 (0.04ms, 33.5MB)
테스트 25 〉	통과 (0.04ms, 33.5MB)
테스트 26 〉	통과 (0.05ms, 33.5MB)
테스트 27 〉	통과 (0.11ms, 33.5MB)
테스트 28 〉	통과 (0.11ms, 33.5MB)
테스트 29 〉	통과 (0.15ms, 33.6MB)
테스트 30 〉	통과 (0.12ms, 33.5MB)
테스트 31 〉	통과 (0.06ms, 33.5MB)
테스트 32 〉	통과 (0.06ms, 33.6MB)
테스트 33 〉	통과 (0.11ms, 33.5MB)
테스트 34 〉	통과 (0.12ms, 33.6MB)

*/
