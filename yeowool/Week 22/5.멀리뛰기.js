// [PGS] 멀리뛰기 / leve2
// 난이도 :  leve2
// 풀이시간 :
// 점수 : +7

/*
문제
효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
(1칸, 1칸, 1칸, 1칸)
(1칸, 2칸, 1칸)
(1칸, 1칸, 2칸)
(2칸, 1칸, 1칸)
(2칸, 2칸)
의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.

제한 사항
n은 1 이상, 2000 이하인 정수입니다.
입출력 예
n	result
4	5
3	3
입출력 예 설명
입출력 예 #1
위에서 설명한 내용과 같습니다.

입출력 예 #2
(2칸, 1칸)
(1칸, 2칸)
(1칸, 1칸, 1칸)
총 3가지 방법으로 멀리 뛸 수 있습니다.


/*
<의사코드>
 
*/

function solution(n) {
  // 동적계획법을 이용한 피보나치
  const dp = Array.from({ length: n }).fill(0); // n길이의 dp배열을 생성
  (dp[0] = 1), (dp[1] = 1); // 0번과 1번에 1 대입

  // 피보나치 풀이, 다만 dp배열에 넣을 때, %1234567을 해줘야 에러가 나지 않는다.
  for (let i = 2; i <= n; i++) {
    dp[i] = (dp[i - 2] + dp[i - 1]) % 1234567;
  }

  return dp[n];
}

/*
 테스트 1
테스트 1 〉	통과 (0.05ms, 33.4MB)
테스트 2 〉	통과 (0.06ms, 33.5MB)
테스트 3 〉	통과 (0.13ms, 33.4MB)
테스트 4 〉	통과 (0.14ms, 33.5MB)
테스트 5 〉	통과 (0.15ms, 33.4MB)
테스트 6 〉	통과 (0.15ms, 33.6MB)
테스트 7 〉	통과 (0.17ms, 33.4MB)
테스트 8 〉	통과 (0.16ms, 33.5MB)
테스트 9 〉	통과 (0.16ms, 33.4MB)
테스트 10 〉	통과 (0.16ms, 33.4MB)
테스트 11 〉	통과 (0.31ms, 33.5MB)
테스트 12 〉	통과 (0.30ms, 33.5MB)
테스트 13 〉	통과 (0.24ms, 33.5MB)
테스트 14 〉	통과 (0.33ms, 33.5MB)
테스트 15 〉	통과 (0.28ms, 33.5MB)
테스트 16 〉	통과 (0.32ms, 33.5MB)
 */
