//[PGS] 멀리뛰기, +12

//팩토리얼로 풀이 
// 테스트 1 〉	통과 (0.03ms, 33.4MB)
// 테스트 2 〉	통과 (0.04ms, 33.6MB)
// 테스트 3 〉	통과 (0.11ms, 33.4MB)
// 테스트 4 〉	통과 (0.11ms, 33.4MB)
// 테스트 5 〉	통과 (0.11ms, 33.6MB)
// 테스트 6 〉	통과 (0.11ms, 33.6MB)
// 테스트 7 〉	통과 (0.18ms, 33.5MB)
// 테스트 8 〉	통과 (0.13ms, 33.4MB)
// 테스트 9 〉	통과 (0.15ms, 33.5MB)
// 테스트 10 〉	통과 (0.12ms, 33.4MB)
// 테스트 11 〉	통과 (0.22ms, 33.7MB)
// 테스트 12 〉	통과 (0.23ms, 33.6MB)
// 테스트 13 〉	통과 (0.25ms, 33.5MB)
// 테스트 14 〉	통과 (0.26ms, 33.5MB)
// 테스트 15 〉	통과 (0.22ms, 33.4MB)
// 테스트 16 〉	통과 (0.28ms, 33.4MB)

function solution(n) {
  let memo = [0,1,2];
    
 for(let i = 3; i <= n; i++) {
     memo.push(memo[i-2] + memo[i-1] % 1234567);
 }
    
    return memo[n]%1234567
}


// 테스트 1 〉	통과 (0.05ms, 33.5MB)
// 테스트 2 〉	통과 (0.04ms, 33.6MB)
// 테스트 3 〉	통과 (0.12ms, 33.5MB)
// 테스트 4 〉	통과 (0.11ms, 33.5MB)
// 테스트 5 〉	통과 (0.13ms, 33.5MB)
// 테스트 6 〉	통과 (0.11ms, 33.5MB)
// 테스트 7 〉	통과 (0.14ms, 33.6MB)
// 테스트 8 〉	통과 (0.20ms, 33.5MB)
// 테스트 9 〉	통과 (0.13ms, 33.5MB)
// 테스트 10 〉	통과 (0.21ms, 33.6MB)
// 테스트 11 〉	통과 (0.23ms, 33.5MB)
// 테스트 12 〉	통과 (0.25ms, 33.5MB)
// 테스트 13 〉	통과 (0.29ms, 33.5MB)
// 테스트 14 〉	통과 (0.24ms, 33.5MB)
// 테스트 15 〉	통과 (0.21ms, 33.6MB)
// 테스트 16 〉	통과 (0.23ms, 33.7MB)

function solution(n) {
  let memo = [0,1,2];
    
 if(n < 3) return memo[n];
    
 for(let i = 3; i <= n; i++) {
     memo.push(memo[i-2] + memo[i-1] % 1234567);
 }
    
    return memo[n]%1234567
}
